services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: comment_system_postgres_prod
    environment:
      POSTGRES_DB: comment_system_prod
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend_comment/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - comment_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d comment_system_prod",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend_comment
      target: production
    container_name: comment_system_backend_prod
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-secure_password_2024}@postgres:5432/comment_system_prod?schema=public
      JWT_SECRET: ${JWT_SECRET:-super-secure-jwt-secret-key-at-least-32-characters-long}
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: ${FRONTEND_URL:-http://localhost:3000}
      PORT: 3001
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password_2024}@redis:6379
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - comment_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend
  frontend:
    build:
      context: ./frontend_comment
      target: production
    container_name: comment_system_frontend_prod
    environment:
      VITE_API_URL: ${BACKEND_URL:-http://localhost:3001}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - comment_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  comment_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
